{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","Users","React","lazy","NewPlace","UpdatePlace","UserPlaces","Auth","App","routes","setToken","setUserId","tokenExpirationDate","setTokenExpirationDate","useCallback","uid","loginToken","expiration","Date","getTime","localStorage","setItem","JSON","stringify","toISOString","removeItem","useEffect","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.801eaeb9.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {},\n});\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = (props) => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = (props) => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useState, useEffect, useCallback } from 'react';\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState();\n  const [userId, setUserId] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n\n  const login = useCallback((uid, loginToken, expiration) => {\n    setToken(loginToken);\n    setUserId(uid);\n\n    const tokenExpirationDate =\n      new Date(expiration) || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      'userData',\n      JSON.stringify({\n        userId: uid,\n        token: loginToken,\n        expiration: tokenExpirationDate.toISOString(),\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    setTokenExpirationDate(null);\n\n    localStorage.removeItem('userData');\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      logoutTimer = setTimeout(\n        logout,\n        tokenExpirationDate.getTime() - new Date().getTime()\n      );\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(storedData.userId, storedData.token, storedData.expiration);\n    }\n  }, [login]);\n\n  return { token, login, logout, userId };\n};\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = (props) => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { AuthContext } from '../../context/auth-context';\n\nimport './NavLinks.css';\n\nconst NavLinks = (props) => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          ALL USERS\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\" onClick={auth.logout}>\n            LOGOUT\n          </NavLink>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from 'react';\nimport { createPortal } from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = (props) => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>\n        {props.children}\n      </aside>\n    </CSSTransition>\n  );\n  return createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = (props) => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">YourPlaces</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React, { Suspense } from 'react';\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\n// import NewPlace from './places/pages/NewPlace';\n// import UpdatePlace from './places/pages/UpdatePlace';\n// import UserPlaces from './places/pages/UserPlaces';\n// import Users from './user/pages/Users';\n// import Auth from './user/pages/Auth';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\n\nconst Users = React.lazy(() => import('./user/pages/Users'));\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'));\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'));\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'));\nconst Auth = React.lazy(() => import('./user/pages/Auth'));\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n  if (token) {\n    routes = (\n      <Switch>\n        {' '}\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\">\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\" exact>\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        {' '}\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\" exact>\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner />\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}